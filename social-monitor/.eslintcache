[{"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\index.tsx":"1","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Pages\\Home\\Home.tsx":"2","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Map\\Map.tsx":"3","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\NavigationBar\\NavigationBar.tsx":"4","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Timeline\\Timeline.tsx":"5","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Map\\initialData.ts":"6","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Timeline\\TimelineStyles.ts":"7","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Scripts\\Scripts.tsx":"8","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\NERSidePanel\\NERSidePanel.tsx":"9"},{"size":1588,"mtime":1616204791024,"results":"10","hashOfConfig":"11"},{"size":1176,"mtime":1616618448458,"results":"12","hashOfConfig":"11"},{"size":7185,"mtime":1616695127799,"results":"13","hashOfConfig":"11"},{"size":1646,"mtime":1616613032307,"results":"14","hashOfConfig":"11"},{"size":2480,"mtime":1616612735483,"results":"15","hashOfConfig":"11"},{"size":6993,"mtime":1616690259455,"results":"16","hashOfConfig":"11"},{"size":1098,"mtime":1616682878256,"results":"17","hashOfConfig":"11"},{"size":3369,"mtime":1616694441218,"results":"18","hashOfConfig":"11"},{"size":1485,"mtime":1616682905851,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"rhklc7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\index.tsx",[],["40","41"],"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Pages\\Home\\Home.tsx",[],"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Map\\Map.tsx",["42","43"],"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\NavigationBar\\NavigationBar.tsx",[],"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Timeline\\Timeline.tsx",["44"],"import React from \"react\";\r\nimport { GlobalProps } from \"../../Types/GlobalProps\";\r\nimport { CountryCodeData } from \"../../Types/MapState\";\r\nimport { TimelineValuesState } from \"../../Types/TimelineValuesState\";\r\nimport { Slider, SliderContainer } from \"./TimelineStyles\";\r\n\r\ninterface TimelineProps extends GlobalProps {\r\n    setTimelineValues: React.Dispatch<React.SetStateAction<TimelineValuesState>>,\r\n    timelineValues: TimelineValuesState\r\n}\r\nconst Timeline: React.FC<TimelineProps> = (props: TimelineProps) => {\r\n    const { globalState, setTimelineValues, timelineValues } = props;\r\n    const [range, setRange] = React.useState({min: 0, max: 0});\r\n\r\n    const dateOptions: Intl.DateTimeFormatOptions = {\r\n        year: \"numeric\",\r\n        month: \"2-digit\",\r\n        day: \"2-digit\"\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        if (range.max === 0) {\r\n            const timelineData = globalState.get(\"TimelineData\") as CountryCodeData[]\r\n            if (timelineData.length > 0) {\r\n                setRange({\r\n                    max: Date.parse(timelineData.slice(-1)[0][\"date\"] as string),\r\n                    min: Date.parse(timelineData[0][\"date\"] as string)\r\n                })\r\n                setTimelineValues({\r\n                    timelineIndex: 0,\r\n                    currentDateUnix: Date.parse(timelineData.slice(-1)[0][\"date\"] as string),\r\n                    currentDateString: \"\"\r\n                })\r\n            }\r\n        }\r\n    })\r\n\r\n    function handleSliderChange(e: React.ChangeEvent<HTMLInputElement>) {\r\n        const dateUNIX = parseInt(e.target.value)\r\n        const date = new Date(dateUNIX).toLocaleDateString(\"fr-CA\", dateOptions)\r\n        const timelineData = globalState.get(\"TimelineData\") as CountryCodeData[]\r\n        if (timelineData.length > 0) {\r\n            setTimelineValues({\r\n                timelineIndex: timelineData.map(item => item[\"date\"]).indexOf(date),\r\n                currentDateString: date,\r\n                currentDateUnix: dateUNIX\r\n            })\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <SliderContainer>\r\n            <Slider onChange={event => handleSliderChange(event)} value={timelineValues.currentDateUnix} \r\n                min={range.min} max={range.max} step={86400} \r\n                tooltipLabel={(value) => {\r\n                    return new Date(value).toLocaleDateString(\"fr-CA\", dateOptions)\r\n                }}\r\n            />\r\n        </SliderContainer>\r\n    )\r\n}\r\n\r\nexport default Timeline;","C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Map\\initialData.ts",[],"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Timeline\\TimelineStyles.ts",[],"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\Scripts\\Scripts.tsx",[],"C:\\Users\\Ze Feng Huang\\Documents\\Third-Year-Project-Social-Monitor\\social-monitor\\src\\Components\\NERSidePanel\\NERSidePanel.tsx",["45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":109,"column":8,"nodeType":"52","endLine":109,"endColumn":29,"suggestions":"53"},{"ruleId":"50","severity":1,"message":"54","line":120,"column":5,"nodeType":"55","endLine":156,"endColumn":6},{"ruleId":"50","severity":1,"message":"56","line":21,"column":5,"nodeType":"57","endLine":21,"endColumn":20,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":33,"column":28,"nodeType":"61","messageId":"62","endLine":33,"endColumn":30},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'chart', 'curTimelineVal', 'getColorForPercentage', and 'globalState'. Either include them or remove the dependency array.","ArrayExpression",["65"],"The 'getColorForPercentage' function makes the dependencies of useEffect Hook (at line 69) change on every render. To fix this, wrap the definition of 'getColorForPercentage' in its own useCallback() Hook.","FunctionDeclaration","React Hook useEffect contains a call to 'setRange'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [range.max, globalState, setTimelineValues] as a second argument to the useEffect Hook.","MemberExpression",["66"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [chart, curTimelineVal, getColorForPercentage, globalState, props.timelineValue]",{"range":"71","text":"72"},"Add dependencies array: [range.max, globalState, setTimelineValues]",{"range":"73","text":"74"},[5383,5404],"[chart, curTimelineVal, getColorForPercentage, globalState, props.timelineValue]",[1460,1460],", [range.max, globalState, setTimelineValues]"]