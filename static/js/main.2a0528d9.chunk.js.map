{"version":3,"sources":["Styles/TextStyles.ts","Components/Map/Map.tsx","Components/Map/mockData.ts","Styles/ContainerStyles.ts","Pages/Home/Home.tsx","index.tsx"],"names":["Title","styled","h1","am4core","am4themes_animated","Map","chart","data","countriesData","Object","entries","forEach","key","value","push","id","name","Math","random","fill","mockData","mapChart","am4maps","geodata","am4geodata_worldLow","projection","Miller","height","polygonSeries","series","exclude","useGeodata","heatRules","mapPolygons","template","polygonTemplate","tooltipText","nonScalingStroke","this","dispose","style","width","Component","Main","div","Home","ReactDOM","render","StrictMode","path","component","exact","document","getElementById"],"mappings":"0XAEO,IAAMA,EAAQC,IAAOC,GAAV,K,8ECKlBC,IAAiBC,K,IAgDFC,E,4MA7CXC,W,oEAGI,IAAIC,ECbG,WACX,IA4PIC,EAKE,GASN,OARAC,OAAOC,QAlQoC,CACvC,GAAM,cACN,GAAM,UACN,GAAM,UACN,GAAM,iBACN,GAAM,UACN,GAAM,SACN,GAAM,WACN,GAAM,aACN,GAAM,sBACN,GAAM,YACN,GAAM,UACN,GAAM,QACN,GAAM,YACN,GAAM,UACN,GAAM,aACN,GAAM,UACN,GAAM,UACN,GAAM,aACN,GAAM,WACN,GAAM,UACN,GAAM,UACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,SACN,GAAM,mCACN,GAAM,mCACN,GAAM,yBACN,GAAM,WACN,GAAM,gBACN,GAAM,SACN,GAAM,iCACN,GAAM,oBACN,GAAM,WACN,GAAM,eACN,GAAM,UACN,GAAM,aACN,GAAM,WACN,GAAM,WACN,GAAM,SACN,GAAM,iBACN,GAAM,2BACN,GAAM,OACN,GAAM,QACN,GAAM,QACN,GAAM,mBACN,GAAM,0BACN,GAAM,WACN,GAAM,UACN,GAAM,yCACN,GAAM,QACN,GAAM,eACN,GAAM,aACN,GAAM,UACN,GAAM,OACN,GAAM,aACN,GAAM,SACN,GAAM,UACN,GAAM,mBACN,GAAM,UACN,GAAM,WACN,GAAM,WACN,GAAM,qBACN,GAAM,UACN,GAAM,QACN,GAAM,cACN,GAAM,oBACN,GAAM,UACN,GAAM,UACN,GAAM,WACN,GAAM,WACN,GAAM,8BACN,GAAM,gBACN,GAAM,OACN,GAAM,UACN,GAAM,SACN,GAAM,gBACN,GAAM,mBACN,GAAM,8BACN,GAAM,QACN,GAAM,SACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,YACN,GAAM,SACN,GAAM,YACN,GAAM,UACN,GAAM,aACN,GAAM,OACN,GAAM,YACN,GAAM,WACN,GAAM,SACN,GAAM,gBACN,GAAM,SACN,GAAM,QACN,GAAM,oCACN,GAAM,WACN,GAAM,WACN,GAAM,YACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,YACN,GAAM,6BACN,GAAM,OACN,GAAM,UACN,GAAM,cACN,GAAM,SACN,GAAM,QACN,GAAM,UACN,GAAM,QACN,GAAM,SACN,GAAM,SACN,GAAM,aACN,GAAM,QACN,GAAM,WACN,GAAM,8CACN,GAAM,0BACN,GAAM,SACN,GAAM,aACN,GAAM,mCACN,GAAM,SACN,GAAM,UACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,gBACN,GAAM,YACN,GAAM,aACN,GAAM,QACN,GAAM,aACN,GAAM,SACN,GAAM,WACN,GAAM,WACN,GAAM,OACN,GAAM,QACN,GAAM,mBACN,GAAM,aACN,GAAM,aACN,GAAM,YACN,GAAM,UACN,GAAM,SACN,GAAM,mCACN,GAAM,4BACN,GAAM,SACN,GAAM,WACN,GAAM,aACN,GAAM,aACN,GAAM,UACN,GAAM,aACN,GAAM,UACN,GAAM,UACN,GAAM,QACN,GAAM,QACN,GAAM,cACN,GAAM,gBACN,GAAM,cACN,GAAM,YACN,GAAM,QACN,GAAM,UACN,GAAM,OACN,GAAM,iBACN,GAAM,2BACN,GAAM,SACN,GAAM,OACN,GAAM,WACN,GAAM,QACN,GAAM,sBACN,GAAM,SACN,GAAM,mBACN,GAAM,WACN,GAAM,OACN,GAAM,cACN,GAAM,WACN,GAAM,SACN,GAAM,WACN,GAAM,cACN,GAAM,QACN,GAAM,8BACN,GAAM,UACN,GAAM,qBACN,GAAM,SACN,GAAM,aACN,GAAM,sBACN,GAAM,+CACN,GAAM,wBACN,GAAM,cACN,GAAM,6BACN,GAAM,4BACN,GAAM,mCACN,GAAM,QACN,GAAM,aACN,GAAM,wBACN,GAAM,eACN,GAAM,UACN,GAAM,SACN,GAAM,aACN,GAAM,eACN,GAAM,YACN,GAAM,4BACN,GAAM,WACN,GAAM,WACN,GAAM,kBACN,GAAM,UACN,GAAM,eACN,GAAM,+CACN,GAAM,cACN,GAAM,QACN,GAAM,YACN,GAAM,QACN,GAAM,WACN,GAAM,yBACN,GAAM,SACN,GAAM,cACN,GAAM,uBACN,GAAM,SACN,GAAM,aACN,GAAM,+BACN,GAAM,WACN,GAAM,cACN,GAAM,OACN,GAAM,UACN,GAAM,QACN,GAAM,sBACN,GAAM,UACN,GAAM,SACN,GAAM,eACN,GAAM,2BACN,GAAM,SACN,GAAM,SACN,GAAM,UACN,GAAM,uBACN,GAAM,uDACN,GAAM,uCACN,GAAM,2BACN,GAAM,UACN,GAAM,aACN,GAAM,UACN,GAAM,qCACN,GAAM,WACN,GAAM,2BACN,GAAM,wBACN,GAAM,oBACN,GAAM,iBACN,GAAM,QACN,GAAM,SACN,GAAM,WACN,GAAM,qBASkBC,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KAClDL,EAAcM,KAAK,CACfC,GAAIH,EACJI,KAAMH,EACNA,MAAOI,KAAKC,UAAYD,KAAKC,SAAW,GAAM,GAAM,GACpDC,KAAM,eAGPX,ED9PQY,GACPC,EAAWlB,IAAe,WAAYmB,KAC1CD,EAASE,QAAUC,IACnBH,EAASI,WAAa,IAAIH,IAAoBI,OAC9CL,EAASM,OAASxB,IAAgB,KAElC,IAAIyB,EAAgBP,EAASQ,OAAOf,KAAK,IAAIQ,KAC7CM,EAAcE,QAAU,CAAC,MACzBF,EAAcG,YAAa,EAC3BH,EAAcrB,KAAOA,EACrBqB,EAAcI,UAAUlB,KAAK,CACzB,SAAY,OACZ,OAAUc,EAAcK,YAAYC,SACpC,IAAO/B,IAAc,WACrB,IAAOA,IAAc,aAGzB,IAAIgC,EAAkBP,EAAcK,YAAYC,SAChDC,EAAgBC,YAAc,mBAE9BD,EAAgBE,kBAAmB,EAKnCC,KAAKhC,MAAQe,I,6CAITiB,KAAKhC,OACLgC,KAAKhC,MAAMiC,Y,+BAKf,OACI,qBAAKxB,GAAG,WAAWyB,MAAO,CAAEC,MAAO,MAAOd,OAAQ,a,GAxC5Ce,a,4IEPX,IAAMC,EAAO1C,IAAO2C,IAAV,KCYFC,EATQ,WACnB,OAAO,eAACF,EAAD,WACH,cAAC3C,EAAD,6BAGA,cAAC,EAAD,QCHR8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAACL,EAAD,UACA,cAAC,IAAD,UACE,cAAC,IAAD,UACI,cAAC,IAAD,CAAOM,KAAK,IAAIC,UAAWL,EAAMM,OAAK,YAKhDC,SAASC,eAAe,W","file":"static/js/main.2a0528d9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 1.5em;\r\n    text-align: center;\r\n    color: white;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4maps from \"@amcharts/amcharts4/maps\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\nimport am4geodata_worldLow from \"@amcharts/amcharts4-geodata/worldLow\";\r\nimport mockData from \"./mockData\"\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nclass Map extends Component {\r\n    chart: am4maps.MapChart | undefined;\r\n    \r\n    componentDidMount() {\r\n        let data = mockData();\r\n        let mapChart = am4core.create(\"chartdiv\", am4maps.MapChart);\r\n        mapChart.geodata = am4geodata_worldLow\r\n        mapChart.projection = new am4maps.projections.Miller();\r\n        mapChart.height = am4core.percent(100)\r\n\r\n        let polygonSeries = mapChart.series.push(new am4maps.MapPolygonSeries());\r\n        polygonSeries.exclude = [\"AQ\"];\r\n        polygonSeries.useGeodata = true;\r\n        polygonSeries.data = data;\r\n        polygonSeries.heatRules.push({\r\n            \"property\": \"fill\",\r\n            \"target\": polygonSeries.mapPolygons.template,\r\n            \"min\": am4core.color(\"#e60000\"),\r\n            \"max\": am4core.color(\"#00e64d\")\r\n        })\r\n\r\n        let polygonTemplate = polygonSeries.mapPolygons.template;\r\n        polygonTemplate.tooltipText = \"{name} : {value}\";\r\n        // polygonTemplate.propertyFields.fill = \"fill\"\r\n        polygonTemplate.nonScalingStroke = true;\r\n\r\n        // let hs = polygonTemplate.states.create(\"hover\");\r\n        // hs.properties.fill = am4core.color(\"#367B25\");\r\n\r\n        this.chart = mapChart;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.chart) {\r\n            this.chart.dispose();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"chartdiv\" style={{ width: \"95%\", height: \"80%\" }}></div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Map","export default function generateMockData() {\r\n    let countryList: {[key: string]: string} = {\r\n        \"AF\": \"Afghanistan\",\r\n        \"AL\": \"Albania\",\r\n        \"DZ\": \"Algeria\",\r\n        \"AS\": \"American Samoa\",\r\n        \"AD\": \"Andorra\",\r\n        \"AO\": \"Angola\",\r\n        \"AI\": \"Anguilla\",\r\n        \"AQ\": \"Antarctica\",\r\n        \"AG\": \"Antigua and Barbuda\",\r\n        \"AR\": \"Argentina\",\r\n        \"AM\": \"Armenia\",\r\n        \"AW\": \"Aruba\",\r\n        \"AU\": \"Australia\",\r\n        \"AT\": \"Austria\",\r\n        \"AZ\": \"Azerbaijan\",\r\n        \"BS\": \"Bahamas\",\r\n        \"BH\": \"Bahrain\",\r\n        \"BD\": \"Bangladesh\",\r\n        \"BB\": \"Barbados\",\r\n        \"BY\": \"Belarus\",\r\n        \"BE\": \"Belgium\",\r\n        \"BZ\": \"Belize\",\r\n        \"BJ\": \"Benin\",\r\n        \"BM\": \"Bermuda\",\r\n        \"BT\": \"Bhutan\",\r\n        \"BO\": \"Bolivia (Plurinational State of)\",\r\n        \"BQ\": \"Bonaire, Sint Eustatius and Saba\",\r\n        \"BA\": \"Bosnia and Herzegovina\",\r\n        \"BW\": \"Botswana\",\r\n        \"BV\": \"Bouvet Island\",\r\n        \"BR\": \"Brazil\",\r\n        \"IO\": \"British Indian Ocean Territory\",\r\n        \"BN\": \"Brunei Darussalam\",\r\n        \"BG\": \"Bulgaria\",\r\n        \"BF\": \"Burkina Faso\",\r\n        \"BI\": \"Burundi\",\r\n        \"CV\": \"Cabo Verde\",\r\n        \"KH\": \"Cambodia\",\r\n        \"CM\": \"Cameroon\",\r\n        \"CA\": \"Canada\",\r\n        \"KY\": \"Cayman Islands\",\r\n        \"CF\": \"Central African Republic\",\r\n        \"TD\": \"Chad\",\r\n        \"CL\": \"Chile\",\r\n        \"CN\": \"China\",\r\n        \"CX\": \"Christmas Island\",\r\n        \"CC\": \"Cocos (Keeling) Islands\",\r\n        \"CO\": \"Colombia\",\r\n        \"KM\": \"Comoros\",\r\n        \"CD\": \"Congo (the Democratic Republic of the)\",\r\n        \"CG\": \"Congo\",\r\n        \"CK\": \"Cook Islands\",\r\n        \"CR\": \"Costa Rica\",\r\n        \"HR\": \"Croatia\",\r\n        \"CU\": \"Cuba\",\r\n        \"CW\": \"Curaçao\",\r\n        \"CY\": \"Cyprus\",\r\n        \"CZ\": \"Czechia\",\r\n        \"CI\": \"Côte d'Ivoire\",\r\n        \"DK\": \"Denmark\",\r\n        \"DJ\": \"Djibouti\",\r\n        \"DM\": \"Dominica\",\r\n        \"DO\": \"Dominican Republic\",\r\n        \"EC\": \"Ecuador\",\r\n        \"EG\": \"Egypt\",\r\n        \"SV\": \"El Salvador\",\r\n        \"GQ\": \"Equatorial Guinea\",\r\n        \"ER\": \"Eritrea\",\r\n        \"EE\": \"Estonia\",\r\n        \"SZ\": \"Eswatini\",\r\n        \"ET\": \"Ethiopia\",\r\n        \"FK\": \"Falkland Islands [Malvinas]\",\r\n        \"FO\": \"Faroe Islands\",\r\n        \"FJ\": \"Fiji\",\r\n        \"FI\": \"Finland\",\r\n        \"FR\": \"France\",\r\n        \"GF\": \"French Guiana\",\r\n        \"PF\": \"French Polynesia\",\r\n        \"TF\": \"French Southern Territories\",\r\n        \"GA\": \"Gabon\",\r\n        \"GM\": \"Gambia\",\r\n        \"GE\": \"Georgia\",\r\n        \"DE\": \"Germany\",\r\n        \"GH\": \"Ghana\",\r\n        \"GI\": \"Gibraltar\",\r\n        \"GR\": \"Greece\",\r\n        \"GL\": \"Greenland\",\r\n        \"GD\": \"Grenada\",\r\n        \"GP\": \"Guadeloupe\",\r\n        \"GU\": \"Guam\",\r\n        \"GT\": \"Guatemala\",\r\n        \"GG\": \"Guernsey\",\r\n        \"GN\": \"Guinea\",\r\n        \"GW\": \"Guinea-Bissau\",\r\n        \"GY\": \"Guyana\",\r\n        \"HT\": \"Haiti\",\r\n        \"HM\": \"Heard Island and McDonald Islands\",\r\n        \"VA\": \"Holy See\",\r\n        \"HN\": \"Honduras\",\r\n        \"HK\": \"Hong Kong\",\r\n        \"HU\": \"Hungary\",\r\n        \"IS\": \"Iceland\",\r\n        \"IN\": \"India\",\r\n        \"ID\": \"Indonesia\",\r\n        \"IR\": \"Iran (Islamic Republic of)\",\r\n        \"IQ\": \"Iraq\",\r\n        \"IE\": \"Ireland\",\r\n        \"IM\": \"Isle of Man\",\r\n        \"IL\": \"Israel\",\r\n        \"IT\": \"Italy\",\r\n        \"JM\": \"Jamaica\",\r\n        \"JP\": \"Japan\",\r\n        \"JE\": \"Jersey\",\r\n        \"JO\": \"Jordan\",\r\n        \"KZ\": \"Kazakhstan\",\r\n        \"KE\": \"Kenya\",\r\n        \"KI\": \"Kiribati\",\r\n        \"KP\": \"Korea (the Democratic People's Republic of)\",\r\n        \"KR\": \"Korea (the Republic of)\",\r\n        \"KW\": \"Kuwait\",\r\n        \"KG\": \"Kyrgyzstan\",\r\n        \"LA\": \"Lao People's Democratic Republic\",\r\n        \"LV\": \"Latvia\",\r\n        \"LB\": \"Lebanon\",\r\n        \"LS\": \"Lesotho\",\r\n        \"LR\": \"Liberia\",\r\n        \"LY\": \"Libya\",\r\n        \"LI\": \"Liechtenstein\",\r\n        \"LT\": \"Lithuania\",\r\n        \"LU\": \"Luxembourg\",\r\n        \"MO\": \"Macao\",\r\n        \"MG\": \"Madagascar\",\r\n        \"MW\": \"Malawi\",\r\n        \"MY\": \"Malaysia\",\r\n        \"MV\": \"Maldives\",\r\n        \"ML\": \"Mali\",\r\n        \"MT\": \"Malta\",\r\n        \"MH\": \"Marshall Islands\",\r\n        \"MQ\": \"Martinique\",\r\n        \"MR\": \"Mauritania\",\r\n        \"MU\": \"Mauritius\",\r\n        \"YT\": \"Mayotte\",\r\n        \"MX\": \"Mexico\",\r\n        \"FM\": \"Micronesia (Federated States of)\",\r\n        \"MD\": \"Moldova (the Republic of)\",\r\n        \"MC\": \"Monaco\",\r\n        \"MN\": \"Mongolia\",\r\n        \"ME\": \"Montenegro\",\r\n        \"MS\": \"Montserrat\",\r\n        \"MA\": \"Morocco\",\r\n        \"MZ\": \"Mozambique\",\r\n        \"MM\": \"Myanmar\",\r\n        \"NA\": \"Namibia\",\r\n        \"NR\": \"Nauru\",\r\n        \"NP\": \"Nepal\",\r\n        \"NL\": \"Netherlands\",\r\n        \"NC\": \"New Caledonia\",\r\n        \"NZ\": \"New Zealand\",\r\n        \"NI\": \"Nicaragua\",\r\n        \"NE\": \"Niger\",\r\n        \"NG\": \"Nigeria\",\r\n        \"NU\": \"Niue\",\r\n        \"NF\": \"Norfolk Island\",\r\n        \"MP\": \"Northern Mariana Islands\",\r\n        \"NO\": \"Norway\",\r\n        \"OM\": \"Oman\",\r\n        \"PK\": \"Pakistan\",\r\n        \"PW\": \"Palau\",\r\n        \"PS\": \"Palestine, State of\",\r\n        \"PA\": \"Panama\",\r\n        \"PG\": \"Papua New Guinea\",\r\n        \"PY\": \"Paraguay\",\r\n        \"PE\": \"Peru\",\r\n        \"PH\": \"Philippines\",\r\n        \"PN\": \"Pitcairn\",\r\n        \"PL\": \"Poland\",\r\n        \"PT\": \"Portugal\",\r\n        \"PR\": \"Puerto Rico\",\r\n        \"QA\": \"Qatar\",\r\n        \"MK\": \"Republic of North Macedonia\",\r\n        \"RO\": \"Romania\",\r\n        \"RU\": \"Russian Federation\",\r\n        \"RW\": \"Rwanda\",\r\n        \"RE\": \"Réunion\",\r\n        \"BL\": \"Saint Barthélemy\",\r\n        \"SH\": \"Saint Helena, Ascension and Tristan da Cunha\",\r\n        \"KN\": \"Saint Kitts and Nevis\",\r\n        \"LC\": \"Saint Lucia\",\r\n        \"MF\": \"Saint Martin (French part)\",\r\n        \"PM\": \"Saint Pierre and Miquelon\",\r\n        \"VC\": \"Saint Vincent and the Grenadines\",\r\n        \"WS\": \"Samoa\",\r\n        \"SM\": \"San Marino\",\r\n        \"ST\": \"Sao Tome and Principe\",\r\n        \"SA\": \"Saudi Arabia\",\r\n        \"SN\": \"Senegal\",\r\n        \"RS\": \"Serbia\",\r\n        \"SC\": \"Seychelles\",\r\n        \"SL\": \"Sierra Leone\",\r\n        \"SG\": \"Singapore\",\r\n        \"SX\": \"Sint Maarten (Dutch part)\",\r\n        \"SK\": \"Slovakia\",\r\n        \"SI\": \"Slovenia\",\r\n        \"SB\": \"Solomon Islands\",\r\n        \"SO\": \"Somalia\",\r\n        \"ZA\": \"South Africa\",\r\n        \"GS\": \"South Georgia and the South Sandwich Islands\",\r\n        \"SS\": \"South Sudan\",\r\n        \"ES\": \"Spain\",\r\n        \"LK\": \"Sri Lanka\",\r\n        \"SD\": \"Sudan\",\r\n        \"SR\": \"Suriname\",\r\n        \"SJ\": \"Svalbard and Jan Mayen\",\r\n        \"SE\": \"Sweden\",\r\n        \"CH\": \"Switzerland\",\r\n        \"SY\": \"Syrian Arab Republic\",\r\n        \"TW\": \"Taiwan\",\r\n        \"TJ\": \"Tajikistan\",\r\n        \"TZ\": \"Tanzania, United Republic of\",\r\n        \"TH\": \"Thailand\",\r\n        \"TL\": \"Timor-Leste\",\r\n        \"TG\": \"Togo\",\r\n        \"TK\": \"Tokelau\",\r\n        \"TO\": \"Tonga\",\r\n        \"TT\": \"Trinidad and Tobago\",\r\n        \"TN\": \"Tunisia\",\r\n        \"TR\": \"Turkey\",\r\n        \"TM\": \"Turkmenistan\",\r\n        \"TC\": \"Turks and Caicos Islands\",\r\n        \"TV\": \"Tuvalu\",\r\n        \"UG\": \"Uganda\",\r\n        \"UA\": \"Ukraine\",\r\n        \"AE\": \"United Arab Emirates\",\r\n        \"GB\": \"United Kingdom of Great Britain and Northern Ireland\",\r\n        \"UM\": \"United States Minor Outlying Islands\",\r\n        \"US\": \"United States of America\",\r\n        \"UY\": \"Uruguay\",\r\n        \"UZ\": \"Uzbekistan\",\r\n        \"VU\": \"Vanuatu\",\r\n        \"VE\": \"Venezuela (Bolivarian Republic of)\",\r\n        \"VN\": \"Viet Nam\",\r\n        \"VG\": \"Virgin Islands (British)\",\r\n        \"VI\": \"Virgin Islands (U.S.)\",\r\n        \"WF\": \"Wallis and Futuna\",\r\n        \"EH\": \"Western Sahara\",\r\n        \"YE\": \"Yemen\",\r\n        \"ZM\": \"Zambia\",\r\n        \"ZW\": \"Zimbabwe\",\r\n        \"AX\": \"Åland Islands\"\r\n    };\r\n\r\n    let countriesData: {\r\n        id: string,\r\n        name: string,\r\n        value: number,\r\n        fill: string\r\n    }[] = [];\r\n    Object.entries(countryList).forEach(([key, value]) => {\r\n        countriesData.push({\r\n            id: key,\r\n            name: value,\r\n            value: Math.random() * (Math.random() > 0.5 ? 1.0: -1.0),\r\n            fill: \"#666666\"\r\n        })\r\n    })\r\n    return countriesData\r\n}","import styled from 'styled-components';\r\n\r\nexport const Main = styled.div`\r\n    height: 100vh;\r\n    width: 100%;\r\n    background-color: #595959\r\n`;\r\n","import React from 'react'\r\nimport { Title } from '../../Styles/TextStyles';\r\nimport Map from '../../Components/Map/Map';\r\nimport { Main } from \"../../Styles/ContainerStyles\";\r\n\r\nconst Home: React.FC = () => {\r\n    return <Main>\r\n        <Title>\r\n            Social Monitor\r\n        </Title>\r\n        <Map />\r\n    </Main>\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './index.css';\nimport Home from './Pages/Home/Home';\nimport { Main } from './Styles/ContainerStyles';\n\nReactDOM.render(\n  <React.StrictMode>\n      <Main>\n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/\" component={Home} exact />\n        </Switch>   \n      </BrowserRouter>\n      </Main>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}